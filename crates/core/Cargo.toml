[package]
name = "salvo_core"
version = { workspace = true }
authors = ["Chrislearn Young <chris@acroidea.com>", "driftluo <driftluo@foxmail.com>"]
edition = { workspace = true }
rust-version = { workspace = true }
description = { workspace = true }
homepage = { workspace = true }
repository = { workspace = true }
readme = { workspace = true }
keywords = { workspace = true }
license = { workspace = true }
categories = { workspace = true }

[package.metadata.docs.rs]
all-features = true
rustdoc-args = ["--cfg", "docsrs"]

[features]
default = ["cookie", "fix-http1-request-uri", "server", "server-handle", "http1", "http2", "test", "ring", "matched-path"]
full = ["cookie", "fix-http1-request-uri", "server", "http1", "http2", "http2-cleartext", "quinn", "rustls", "native-tls", "openssl", "unix", "test", "anyhow", "ring", "matched-path", "socket2"]
cookie = ["dep:cookie"]
fix-http1-request-uri = ["http1"]
server = []
server-handle = []
http1 = []
http2 = ["hyper/http2"]
http2-cleartext = ["http2"]
quinn = ["dep:salvo-http3", "dep:quinn", "dep:h3-datagram", "rustls"]
rustls = ["dep:tokio-rustls", "dep:rustls-pemfile", "ring"]
native-tls = ["dep:tokio-native-tls", "dep:native-tls"]
openssl = ["dep:openssl", "dep:tokio-openssl"]
unix = ["http1"]
test = ["dep:brotli", "dep:flate2", "dep:zstd", "dep:encoding_rs", "dep:serde_urlencoded", "dep:url", "tokio/macros"]
acme = ["http1", "http2", "hyper-util/http1", "hyper-util/http2", "hyper-util/client-legacy", "dep:hyper-rustls", "dep:rcgen", "dep:ring", "ring", "dep:x509-parser", "dep:tokio-rustls", "dep:rustls-pemfile"]
socket2 = ["dep:socket2"]
# aws-lc-rs = ["hyper-rustls?/aws-lc-rs", "tokio-rustls?/aws-lc-rs"]
ring = ["hyper-rustls?/ring", "tokio-rustls?/ring"]
matched-path = []
tls12 = ["hyper-rustls?/tls12", "tokio-rustls?/tls12"]

[dependencies]
anyhow = { workspace = true, optional = true }
async-trait = { workspace = true }
base64 = { workspace = true }
bytes = { workspace = true }
cookie = { workspace = true, features = ["percent-encode", "private", "signed"], optional = true }
encoding_rs = { workspace = true, optional = true }
enumflags2 = { workspace = true }
eyre = { workspace = true, optional = true }
form_urlencoded = { workspace = true }
futures-channel = { workspace = true }
futures-util = { workspace = true, features = ["io"] }
h3-datagram = { workspace = true, optional = true }
headers = { workspace = true }
http = { workspace = true }
http-body-util = { workspace = true }
hyper = { workspace = true, features = ["http1", "client", "server"] }
indexmap = { workspace = true }
mime = { workspace = true }
mime-infer = { workspace = true }
multer = { workspace = true }
multimap = { workspace = true, features = ["serde"] }
native-tls = { workspace = true, optional = true, features = ["alpn"] }
openssl = { workspace = true, optional = true }
percent-encoding = { workspace = true }
pin-project = { workspace = true }
parking_lot = { workspace = true }
quinn = { workspace = true, optional = true, features = ["runtime-tokio", "ring", "rustls"] }
rand = { workspace = true }
rcgen = { workspace = true, optional = true }
regex = { workspace = true }
ring = { workspace = true, optional = true }
rustls-pemfile = { workspace = true, optional = true }
salvo-http3 = { workspace = true, optional = true, features = ["quinn"] }
salvo_macros = { workspace = true }
hyper-rustls = { workspace = true, optional = true, features = ["native-tokio", "http1", "logging"] }
hyper-util = { workspace = true, features = ["tokio"] }
serde = { workspace = true, features = ["derive"] }
serde_json = { workspace = true, features = ["raw_value"] }
serde-xml-rs = { workspace = true }
serde_urlencoded = { workspace = true, optional = true }
socket2 = { workspace = true, optional = true }
sync_wrapper = { workspace = true }
tempfile = { workspace = true }
thiserror = { workspace = true }
tokio = { workspace = true, features = ["fs", "io-util", "macros", "net", "rt-multi-thread"] }
tokio-native-tls = { workspace = true, optional = true }
tokio-openssl = { workspace = true, optional = true }
tokio-rustls = { workspace = true, optional = true, features = ["logging"] }
tokio-util = { workspace = true, features = ["io"] }
tracing = { workspace = true }
url = { workspace = true, optional = true }
x509-parser = { workspace = true, optional = true }

brotli = { workspace = true, optional = true, features = ["default"] }
flate2 = { workspace = true, optional = true, features = ["default"] }
zstd = { workspace = true, optional = true, features = ["default"] }

[target.'cfg(unix)'.dependencies]
nix = { workspace = true, features = ["fs", "user"] }

[dev-dependencies]
fastrand = { workspace = true }

[lints]
workspace = true
